//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// testVehicleDup.cpp — unit test for Vehicle::isDuplicateVehicle
// Version History:
//   v1.0 (2025‑07‑24) — initial duplicate‐check test
//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

#include <iostream>
#include <cstdio>
#include "Vehicle.h"

int main() {
    // 1) Clean slate
    std::remove("vehicles.dat");

    // 2) Create & save one vehicle
    Vehicle v;
    v.licensePlate = "ABC123";
    v.length  = 6.0f;
    v.height  = 2.5f;
    v.width   = 2.0f;
    v.isSpecial = false;
    v.type    = Vehicle::VehicleType::REGULAR;
    v.saveVehicles();

    // 3) Check duplicate detection
    bool pass = true;
    pass &=  v.isDuplicateVehicle("ABC123");   // should be found
    pass &= !v.isDuplicateVehicle("XYZ789");   // should NOT be found

    std::cout << (pass ? "Pass\n" : "Fail\n");
    return pass ? 0 : 1;
}
